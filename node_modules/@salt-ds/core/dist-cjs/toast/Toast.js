'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var clsx = require('clsx');
var React = require('react');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
var useForkRef = require('../utils/useForkRef.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
var StatusIndicator = require('../status-indicator/StatusIndicator.js');
var Toast$1 = require('./Toast.css.js');

const withBaseName = makePrefixer.makePrefixer("saltToast");
const Toast = React.forwardRef(function Toast2(props, ref) {
  const { children, className, status = "info", ...rest } = props;
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-toast",
    css: Toast$1,
    window: targetWindow
  });
  const toastRef = React.useRef();
  const handleRef = useForkRef.useForkRef(toastRef, ref);
  React.useLayoutEffect(() => {
    var _a;
    (_a = toastRef.current) == null ? void 0 : _a.scrollIntoView();
  }, []);
  return /* @__PURE__ */ jsxRuntime.jsxs("div", {
    className: clsx.clsx(withBaseName(), withBaseName(status), className),
    role: "alert",
    ...rest,
    ref: handleRef,
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(StatusIndicator.StatusIndicator, {
        status,
        className: withBaseName("icon")
      }),
      children
    ]
  });
});

exports.Toast = Toast;
//# sourceMappingURL=Toast.js.map
