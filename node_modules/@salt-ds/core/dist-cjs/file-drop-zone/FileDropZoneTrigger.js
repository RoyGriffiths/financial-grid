'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
require('../utils/useFloatingUI/useFloatingUI.js');
var useForkRef = require('../utils/useForkRef.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
require('clsx');
var Button = require('../button/Button.js');

const FileDropZoneTrigger = React.forwardRef(function FileDropZoneTrigger2({ accept, children, disabled, multiple = false, onChange, ...rest }, ref) {
  const buttonRef = React.useRef(null);
  const fileInputRef = React.useRef(null);
  const triggerRef = useForkRef.useForkRef(ref, buttonRef);
  const handleFocus = (event) => {
    var _a;
    event.stopPropagation();
    (_a = buttonRef.current) == null ? void 0 : _a.focus();
  };
  const handleClick = (event) => {
    var _a;
    event.stopPropagation();
    (_a = fileInputRef.current) == null ? void 0 : _a.click();
  };
  const handleChange = (event) => {
    var _a;
    const files = Array.from((_a = event.target.files) != null ? _a : []);
    onChange == null ? void 0 : onChange(event, files);
  };
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(Button.Button, {
        onClick: handleClick,
        disabled,
        ref: triggerRef,
        ...rest,
        children: children != null ? children : "Browse files"
      }),
      /* @__PURE__ */ jsxRuntime.jsx("input", {
        accept,
        className: "input-hidden",
        disabled,
        multiple,
        onChange: handleChange,
        onFocus: handleFocus,
        ref: fileInputRef,
        type: "file"
      })
    ]
  });
});

exports.FileDropZoneTrigger = FileDropZoneTrigger;
//# sourceMappingURL=FileDropZoneTrigger.js.map
