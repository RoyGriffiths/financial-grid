'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var clsx = require('clsx');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
var Button$1 = require('./Button.css.js');
var useButton = require('./useButton.js');

const withBaseName = makePrefixer.makePrefixer("saltButton");
const ButtonVariantValues = ["primary", "secondary", "cta"];
const Button = React.forwardRef(
  function Button2({
    children,
    className,
    disabled,
    focusableWhenDisabled,
    onKeyUp,
    onKeyDown,
    onBlur,
    onClick,
    type = "button",
    variant = "primary",
    ...restProps
  }, ref) {
    const { active, buttonProps } = useButton.useButton({
      disabled,
      focusableWhenDisabled,
      onKeyUp,
      onKeyDown,
      onBlur,
      onClick
    });
    const targetWindow = window.useWindow();
    styles.useComponentCssInjection({
      testId: "salt-button",
      css: Button$1,
      window: targetWindow
    });
    const { tabIndex, ...restButtonProps } = buttonProps;
    return /* @__PURE__ */ jsxRuntime.jsx("button", {
      ...restButtonProps,
      className: clsx.clsx(
        withBaseName(),
        withBaseName(variant),
        {
          [withBaseName("disabled")]: disabled,
          [withBaseName("active")]: active
        },
        className
      ),
      ...restProps,
      ref,
      type,
      children
    });
  }
);

exports.Button = Button;
exports.ButtonVariantValues = ButtonVariantValues;
//# sourceMappingURL=Button.js.map
