'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var clsx = require('clsx');
var StatusIndicator = require('../status-indicator/StatusIndicator.js');
var icons = require('@salt-ds/icons');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
var AccordionContext = require('./AccordionContext.js');
var AccordionHeader$1 = require('./AccordionHeader.css.js');

const withBaseName = makePrefixer.makePrefixer("saltAccordionHeader");
const AccordionHeader = React.forwardRef(function AccordionHeader2(props, ref) {
  const { children, className, onClick, ...rest } = props;
  const { value, expanded, toggle, disabled, id, status } = AccordionContext.useAccordion();
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-accordion-header",
    css: AccordionHeader$1,
    window: targetWindow
  });
  const handleClick = (event) => {
    toggle(event);
    onClick == null ? void 0 : onClick(event);
  };
  return /* @__PURE__ */ jsxRuntime.jsxs("button", {
    ref,
    className: clsx.clsx(
      withBaseName(),
      { [withBaseName(status != null ? status : "")]: status },
      className
    ),
    disabled,
    onClick: handleClick,
    "aria-expanded": expanded,
    id: `${id}-header`,
    "aria-controls": `${id}-panel`,
    value,
    ...rest,
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(icons.ChevronRightIcon, {
        "aria-hidden": "true",
        className: withBaseName("icon")
      }),
      children,
      status && /* @__PURE__ */ jsxRuntime.jsx(StatusIndicator.StatusIndicator, {
        className: withBaseName("statusIndicator"),
        status
      })
    ]
  });
});

exports.AccordionHeader = AccordionHeader;
//# sourceMappingURL=AccordionHeader.js.map
