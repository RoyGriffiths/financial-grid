'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var FlexLayout = require('../flex-layout/FlexLayout.js');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
var useResponsiveProp = require('../utils/useResponsiveProp.js');
var clsx = require('clsx');
var StackLayout$1 = require('./StackLayout.css.js');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');

const withBaseName = makePrefixer.makePrefixer("saltStackLayout");
const StackLayout = React.forwardRef(
  ({
    children,
    className,
    direction = "column",
    gap,
    separators,
    style,
    ...rest
  }, ref) => {
    const targetWindow = window.useWindow();
    styles.useComponentCssInjection({
      testId: "salt-stack-layout",
      css: StackLayout$1,
      window: targetWindow
    });
    const flexGap = useResponsiveProp.useResponsiveProp(gap, 3);
    const separatorAlignment = separators === true ? "center" : separators;
    const flexDirection = useResponsiveProp.useResponsiveProp(direction, "column");
    const stackLayoutStyles = {
      ...style,
      "--stackLayout-gap-multiplier": flexGap
    };
    return /* @__PURE__ */ jsxRuntime.jsx(FlexLayout.FlexLayout, {
      className: clsx.clsx(
        withBaseName(),
        withBaseName(flexDirection),
        {
          [withBaseName("separator")]: !!separatorAlignment,
          [separatorAlignment ? withBaseName(`separator-${separatorAlignment}`) : ""]: separatorAlignment
        },
        className
      ),
      ref,
      direction,
      style: stackLayoutStyles,
      wrap: false,
      gap: flexGap,
      ...rest,
      children
    });
  }
);

exports.StackLayout = StackLayout;
//# sourceMappingURL=StackLayout.js.map
