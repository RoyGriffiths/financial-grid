import { jsxs, jsx } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import { clsx } from 'clsx';
import { makePrefixer } from '../../utils/makePrefixer.js';
import '../../utils/useFloatingUI/useFloatingUI.js';
import '../../utils/useId.js';
import '../../salt-provider/SaltProvider.js';
import '../../viewport/ViewportProvider.js';
import { Text } from '../../text/Text.js';
import '../../text/Display.js';
import '../../text/Headings.js';
import '../../text/Label.js';
import '../../text/TextNotation.js';
import '../../text/TextAction.js';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';
import css_248z from './CircularProgress.css.js';

const withBaseName = makePrefixer("saltCircularProgress");
const CircularProgress = forwardRef(function CircularProgress2({ className, hideLabel = false, max = 100, min = 0, value = 0, ...rest }, ref) {
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-circular-progress",
    css: css_248z,
    window: targetWindow
  });
  const subOverlayRightStyle = {};
  const subOverlayLeftStyle = {};
  const getRotationAngle = (progress2, shift = 0) => {
    return -180 + (progress2 - shift) / 50 * 180;
  };
  const progress = (value - min) / (max - min) * 100;
  if (progress <= 50) {
    const rotationAngle = getRotationAngle(progress);
    subOverlayRightStyle.transform = `rotate(${rotationAngle}deg)`;
    subOverlayLeftStyle.transform = "rotate(-180deg)";
  } else {
    const rotationAngle = getRotationAngle(progress, 50);
    subOverlayRightStyle.transform = "rotate(0deg)";
    subOverlayLeftStyle.transform = `rotate(${rotationAngle}deg)`;
  }
  return /* @__PURE__ */ jsxs("div", {
    className: clsx(withBaseName(), className),
    ref,
    role: "progressbar",
    "aria-valuemax": max,
    "aria-valuemin": min,
    "aria-valuenow": Math.round(value),
    ...rest,
    children: [
      /* @__PURE__ */ jsx("div", {
        className: withBaseName("track")
      }),
      /* @__PURE__ */ jsxs("div", {
        className: withBaseName("bars"),
        children: [
          /* @__PURE__ */ jsx("div", {
            className: withBaseName("barOverlayRight"),
            children: /* @__PURE__ */ jsx("div", {
              className: withBaseName("barSubOverlayRight"),
              style: subOverlayRightStyle,
              children: /* @__PURE__ */ jsx("div", {
                className: withBaseName("bar")
              })
            })
          }),
          /* @__PURE__ */ jsx("div", {
            className: withBaseName("barOverlayLeft"),
            children: /* @__PURE__ */ jsx("div", {
              className: withBaseName("barSubOverlayLeft"),
              style: subOverlayLeftStyle,
              children: /* @__PURE__ */ jsx("div", {
                className: withBaseName("bar")
              })
            })
          })
        ]
      }),
      !hideLabel && /* @__PURE__ */ jsx(Text, {
        styleAs: "h2",
        className: withBaseName("progressLabel"),
        children: `${Math.round(progress)} %`
      })
    ]
  });
});

export { CircularProgress };
//# sourceMappingURL=CircularProgress.js.map
