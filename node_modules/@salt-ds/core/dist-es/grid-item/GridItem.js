import { jsx } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import { clsx } from 'clsx';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import { useResponsiveProp } from '../utils/useResponsiveProp.js';
import css_248z from './GridItem.css.js';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';

const GRID_ALIGNMENT_BASE = [
  "start",
  "end",
  "center",
  "stretch"
];
const withBaseName = makePrefixer("saltGridItem");
const colStart = "auto";
const colEnd = "auto";
const rowStart = "auto";
const rowEnd = "auto";
const GridItem = forwardRef(
  ({
    as,
    children,
    className,
    colSpan,
    rowSpan,
    horizontalAlignment = "stretch",
    verticalAlignment = "stretch",
    style,
    ...rest
  }, ref) => {
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-grid-item",
      css: css_248z,
      window: targetWindow
    });
    const Component = as || "div";
    const gridItemColSpan = useResponsiveProp(colSpan, "auto");
    const gridItemRowSpan = useResponsiveProp(rowSpan, "auto");
    const gridColumnStart = gridItemColSpan ? `span ${gridItemColSpan}` : colStart;
    const gridColumnEnd = gridItemColSpan ? `span ${gridItemColSpan}` : colEnd;
    const gridRowStart = gridItemRowSpan ? `span ${gridItemRowSpan}` : rowStart;
    const gridRowEnd = gridItemRowSpan ? `span ${gridItemRowSpan}` : rowEnd;
    const gridStyles = {
      ...style,
      "--gridItem-justifySelf": horizontalAlignment,
      "--gridItem-alignSelf": verticalAlignment,
      "--gridItem-gridRowStart": gridRowStart,
      "--gridItem-gridColumnStart": gridColumnStart,
      "--gridItem-gridRowEnd": gridRowEnd,
      "--gridItem-gridColumnEnd": gridColumnEnd
    };
    return /* @__PURE__ */ jsx(Component, {
      className: clsx(withBaseName(), className),
      style: gridStyles,
      ref,
      ...rest,
      children
    });
  }
);

export { GRID_ALIGNMENT_BASE, GridItem };
//# sourceMappingURL=GridItem.js.map
