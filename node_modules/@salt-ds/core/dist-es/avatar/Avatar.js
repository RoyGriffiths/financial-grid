import { jsx } from 'react/jsx-runtime';
import { UserSolidIcon } from '@salt-ds/icons';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';
import { clsx } from 'clsx';
import { forwardRef } from 'react';
import { useAvatarImage } from './useAvatarImage.js';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import css_248z from './Avatar.css.js';

const withBaseName = makePrefixer("saltAvatar");
const DEFAULT_AVATAR_SIZE = 2;
const defaultNameToInitials = (name) => name == null ? void 0 : name.split(" ").slice(0, 2).map((n) => n[0]).join("").toUpperCase();
const Avatar = forwardRef(function Avatar2({
  className,
  children: childrenProp,
  name,
  nameToInitials = defaultNameToInitials,
  src,
  size = DEFAULT_AVATAR_SIZE,
  style: styleProp,
  fallbackIcon = /* @__PURE__ */ jsx(UserSolidIcon, {
    "aria-label": "User Avatar"
  }),
  ...rest
}, ref) {
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-avatar",
    css: css_248z,
    window: targetWindow
  });
  let children;
  const style = {
    ...styleProp,
    "--saltAvatar-size-multiplier": `${size}`
  };
  const status = useAvatarImage({ src });
  const hasImgNotFailing = status === "loaded";
  if (hasImgNotFailing) {
    children = /* @__PURE__ */ jsx("img", {
      alt: name,
      src
    });
  } else if (childrenProp != null) {
    children = childrenProp;
  }
  const avatarInitials = nameToInitials(name);
  const initialsProps = avatarInitials ? {
    role: "img",
    "aria-label": name
  } : {};
  return /* @__PURE__ */ jsx("div", {
    ref,
    style,
    className: clsx(
      withBaseName(),
      { [withBaseName("withImage")]: hasImgNotFailing },
      className
    ),
    ...initialsProps,
    ...rest,
    children: children || avatarInitials || fallbackIcon
  });
});

export { Avatar };
//# sourceMappingURL=Avatar.js.map
