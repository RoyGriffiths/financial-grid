import { jsx } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import { clsx } from 'clsx';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import { useResponsiveProp } from '../utils/useResponsiveProp.js';
import css_248z from './GridLayout.css.js';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';

const withBaseName = makePrefixer("saltGridLayout");
const GridLayout = forwardRef(
  ({
    as,
    children,
    className,
    columns = 12,
    rows = 1,
    gap,
    columnGap,
    rowGap,
    style,
    ...rest
  }, ref) => {
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-grid-layout",
      css: css_248z,
      window: targetWindow
    });
    const Component = as || "div";
    const gridColumns = useResponsiveProp(columns, 12);
    const gridRows = useResponsiveProp(rows, 1);
    const gridGap = useResponsiveProp(gap, 3);
    const gridColumnGap = useResponsiveProp(columnGap, 3);
    const gridRowGap = useResponsiveProp(rowGap, 3);
    const gridLayoutStyles = {
      ...style,
      "--gridLayout-columns": gridColumns,
      "--gridLayout-rows": gridRows,
      "--gridLayout-columnGap": gridColumnGap != null ? gridColumnGap : gridGap,
      "--gridLayout-rowGap": gridRowGap != null ? gridRowGap : gridGap
    };
    return /* @__PURE__ */ jsx(Component, {
      className: clsx(withBaseName(), className),
      style: gridLayoutStyles,
      ref,
      ...rest,
      children
    });
  }
);

export { GridLayout };
//# sourceMappingURL=GridLayout.js.map
