import { jsxs, jsx } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import { clsx } from 'clsx';
import { StatusIndicator } from '../status-indicator/StatusIndicator.js';
import { ChevronRightIcon } from '@salt-ds/icons';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import { useAccordion } from './AccordionContext.js';
import css_248z from './AccordionHeader.css.js';

const withBaseName = makePrefixer("saltAccordionHeader");
const AccordionHeader = forwardRef(function AccordionHeader2(props, ref) {
  const { children, className, onClick, ...rest } = props;
  const { value, expanded, toggle, disabled, id, status } = useAccordion();
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-accordion-header",
    css: css_248z,
    window: targetWindow
  });
  const handleClick = (event) => {
    toggle(event);
    onClick == null ? void 0 : onClick(event);
  };
  return /* @__PURE__ */ jsxs("button", {
    ref,
    className: clsx(
      withBaseName(),
      { [withBaseName(status != null ? status : "")]: status },
      className
    ),
    disabled,
    onClick: handleClick,
    "aria-expanded": expanded,
    id: `${id}-header`,
    "aria-controls": `${id}-panel`,
    value,
    ...rest,
    children: [
      /* @__PURE__ */ jsx(ChevronRightIcon, {
        "aria-hidden": "true",
        className: withBaseName("icon")
      }),
      children,
      status && /* @__PURE__ */ jsx(StatusIndicator, {
        className: withBaseName("statusIndicator"),
        status
      })
    ]
  });
});

export { AccordionHeader };
//# sourceMappingURL=AccordionHeader.js.map
